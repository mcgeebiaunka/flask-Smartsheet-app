from flask import Flask, render_template, request, redirect, url_for, flash
import smartsheet
import os
from dotenv import load_dotenv

load_dotenv()
app = Flask(__name__)
app.secret_key = "your_secret_key"  # Needed for flashing messages

# ðŸ”¹ Initialize Smartsheet client
ACCESS_TOKEN = os.getenv("SMARTSHEET_ACCESS_TOKEN")
if not ACCESS_TOKEN:
    raise ValueError("SMARTSHEET_ACCESS_TOKEN not found in environment variables")
smartsheet_client = smartsheet.Smartsheet(ACCESS_TOKEN)

# ðŸ”¹ Load your sheet ID
SHEET_ID = os.getenv("SMARTSHEET_SHEET_ID")
if not SHEET_ID:
    raise ValueError("SMARTSHEET_SHEET_ID not found in environment variables")
SHEET_ID = int(SHEET_ID)

# ðŸ”¹ Column mappings (editable only)
COLUMN_IDS = {

    "REQUESTER_NAME": 6844971802120068,
    "EMAIL_ADDRESS": 5420868020948868,
    "REQUESTER_PHONE_NUMBER": 712109516345220,
    "ORDER_LINES_TOTAL": 5947390679011204,
    "PRIORITY": 4232381213134724,
    "SHIP_TO_ADDRESS": 1895936821514116,
    "CITY": 1121811916083076,
    "STATE": 4029337271750532,
    "ZIP": 7675828930563972,
    "HEALTH_MINISTRY": 5732398004391812,

    # ðŸ”¹ Instead of PO_BU (formula column), map to PO_BU_INPUT helper
    "PO_BU_INPUT": 8723483445645188,  # ðŸ‘ˆ replace with your new helper column ID

    "SHIP_TO_CODE": 6615130922241924,
    "GL_UNIT": 8587578983010180,
    "ACCOUNT_NUMBER": 6399399009931140,
    "DEPARTMENT": 8266260701990788,
    "SUPPLIER_NAME": 6292998610702212,
    "SUPPLIER_ID": 8064509948415876,
    "SUPPLIER_ACCOUNT": 3448537434247044,
    "REQUESTER_COMMENTS": 1202478817431428,
    "TOTAL_AMOUNT": 8478690965147524
}

# ðŸ”¹ Item column mappings (1â€“20)
ITEM_COLUMNS = {
    1: {"ITEM_ID_PS": 4989752088678276, "SUPPLIER_ITEM_ID": 6043780012789636, "IN_UNIT": 525179654721412,
        "SERIAL_LOT": 6859363660812164, "ITEM_DESCRIPTION": 414957405687684, "UOM": 6502890541895556,
        "QTY": 4919383344500612, "PRICE": 1016686014844804, "TOTAL": 3865959891423108},
    2: {"ITEM_ID_PS": 4672453762830212, "SUPPLIER_ITEM_ID": 7389444806233988, "IN_UNIT": 4856170015838084,
        "SERIAL_LOT": 3316252133248900, "ITEM_DESCRIPTION": 3411535116586884, "UOM": 4217967940423556,
        "QTY": 8750605204148100, "PRICE": 1540213268762500, "TOTAL": 5220046310428548},
    3: {"ITEM_ID_PS": 238874014207876, "SUPPLIER_ITEM_ID": 104947169578884, "IN_UNIT": 1962255411531652,
        "SERIAL_LOT": 6344229578297220, "ITEM_DESCRIPTION": 97885740027780, "UOM": 7465822209658756,
        "QTY": 5988621526192004, "PRICE": 5114853614374788, "TOTAL": 2968246496743300},
    4: {"ITEM_ID_PS": 3272597219528580, "SUPPLIER_ITEM_ID": 5212549222190980, "IN_UNIT": 7184347232948100,
        "SERIAL_LOT": 4207937272893316, "ITEM_DESCRIPTION": 2912635507134340, "UOM": 4452614251171716,
        "QTY": 1117830481399684, "PRICE": 2341292583636868, "TOTAL": 7471846124113796},
    5: {"ITEM_ID_PS": 8521422091800452, "SUPPLIER_ITEM_ID": 6299129139646340, "IN_UNIT": 2397662016130948,
        "SERIAL_LOT": 7324020469092228, "ITEM_DESCRIPTION": 3447462518017924, "UOM": 5061695911448452,
        "QTY": 1483005780774788, "PRICE": 3900541805744004, "TOTAL": 1842346589900676},
    6: {"ITEM_ID_PS": 8944477414313860, "SUPPLIER_ITEM_ID": 7292132225929092, "IN_UNIT": 4943208035078020,
        "SERIAL_LOT": 8238483038228356, "ITEM_DESCRIPTION": 5016484472115076, "UOM": 1026748522909572,
        "QTY": 3776379338051460, "PRICE": 8441391654588292, "TOTAL": 889617751166852},
    7: {"ITEM_ID_PS": 7007713854443396, "SUPPLIER_ITEM_ID": 7487907841134468, "IN_UNIT": 903610904563588,
        "SERIAL_LOT": 2981127387828100, "ITEM_DESCRIPTION": 416162181238660, "UOM": 1855758815416196,
        "QTY": 3465714689855364, "PRICE": 5318045400256388, "TOTAL": 5393217378537348},
    8: {"ITEM_ID_PS": 7924130623737732, "SUPPLIER_ITEM_ID": 3207166550560644, "IN_UNIT": 338801230303108,
        "SERIAL_LOT": 7690496750866308, "ITEM_DESCRIPTION": 1542062088081284, "UOM": 5898121904869252,
        "QTY": 8273170100080516, "PRICE": 6024987219283844, "TOTAL": 3141417564852100},
    9: {"ITEM_ID_PS": 605117656813444, "SUPPLIER_ITEM_ID": 2613515634036612, "IN_UNIT": 6069107941920644,
        "SERIAL_LOT": 692504672030596, "ITEM_DESCRIPTION": 3073991023218564, "UOM": 6632308177850244,
        "QTY": 5685811470880644, "PRICE": 7713994919595908, "TOTAL": 7645017192222596},
    10: {"ITEM_ID_PS": 4156215944499076, "SUPPLIER_ITEM_ID": 640707232223108, "IN_UNIT": 1114373539712900,
         "SERIAL_LOT": 5423733271121796, "ITEM_DESCRIPTION": 6062944663850884, "UOM": 5332583428345732,
         "QTY": 6500160624086916, "PRICE": 6233657668489092, "TOTAL": 2015517658009476},
    11: {"ITEM_ID_PS": 7766613637681028, "SUPPLIER_ITEM_ID": 1487615727193988, "IN_UNIT": 5511638366769028,
         "SERIAL_LOT": 7087839824793476, "ITEM_DESCRIPTION": 6127420712898436, "UOM": 7942586467307396,
         "QTY": 1996002382532484, "PRICE": 1061631878188932, "TOTAL": 6519117285379972},
    12: {"ITEM_ID_PS": 8980982086193028, "SUPPLIER_ITEM_ID": 1433403576242052, "IN_UNIT": 8320907755605892,
         "SERIAL_LOT": 962928697888644, "ITEM_DESCRIPTION": 5499994710429572, "UOM": 729124469165956,
         "QTY": 6848203030482820, "PRICE": 4758507664134020, "TOTAL": 4267317471694724},
    13: {"ITEM_ID_PS": 2840778459795332, "SUPPLIER_ITEM_ID": 7769382817845124, "IN_UNIT": 90672379678596,
         "SERIAL_LOT": 1985186748911492, "ITEM_DESCRIPTION": 7751794524114820, "UOM": 6939406661013380,
         "QTY": 7451521649954692, "PRICE": 4298849258262404, "TOTAL": 8770917099065220},
    14: {"ITEM_ID_PS": 8234156127113092, "SUPPLIER_ITEM_ID": 887683286781828, "IN_UNIT": 7850733390745476,
         "SERIAL_LOT": 8174006989180804, "ITEM_DESCRIPTION": 2201257963638660, "UOM": 8262035934236548,
         "QTY": 4341461742735236, "PRICE": 4439331598716804, "TOTAL": 185930309390212},
    15: {"ITEM_ID_PS": 2472778145681284, "SUPPLIER_ITEM_ID": 775069244280708, "IN_UNIT": 4492073260240772,
         "SERIAL_LOT": 2424952745316228, "ITEM_DESCRIPTION": 2506807138013060, "UOM": 1213914876170116,
         "QTY": 593589528383364, "PRICE": 4968934754963332, "TOTAL": 4689529936760708},
    16: {"ITEM_ID_PS": 1346878238838660, "SUPPLIER_ITEM_ID": 2843447245098884, "IN_UNIT": 8519958014939012,
         "SERIAL_LOT": 8816396657708932, "ITEM_DESCRIPTION": 8259245816106884, "UOM": 859647719985028,
         "QTY": 2981164801019780, "PRICE": 2700342290239364, "TOTAL": 2437730123075460},
    17: {"ITEM_ID_PS": 7671206173691780, "SUPPLIER_ITEM_ID": 2900991216930692, "IN_UNIT": 3256789126303620,
         "SERIAL_LOT": 7611057035759492, "ITEM_DESCRIPTION": 7696295862685572, "UOM": 4704031070703492,
         "QTY": 4309272036593540, "PRICE": 3826242197081988, "TOTAL": 6941329750445956},
    18: {"ITEM_ID_PS": 6977988922658692, "SUPPLIER_ITEM_ID": 6643482911002500, "IN_UNIT": 7892532012470148,
         "SERIAL_LOT": 3480483907981188, "ITEM_DESCRIPTION": 8753343417241476, "UOM": 2101452688019332,
         "QTY": 275183470071684, "PRICE": 6444978246733700, "TOTAL": 1311830216232836},
    19: {"ITEM_ID_PS": 6500483853930372, "SUPPLIER_ITEM_ID": 2013583193624452, "IN_UNIT": 4525810228350852,
         "SERIAL_LOT": 447852597432196, "ITEM_DESCRIPTION": 3069757091434372, "UOM": 4237347440512900,
         "QTY": 2302206975627140, "PRICE": 322760064323460, "TOTAL": 5815429843603332},
    20: {"ITEM_ID_PS": 8752283667615620, "SUPPLIER_ITEM_ID": 4152768964808580, "IN_UNIT": 313890419986308,
         "SERIAL_LOT": 4695302522752900, "ITEM_DESCRIPTION": 6513951495638916, "UOM": 454542109659012,
         "QTY": 52491026386820, "PRICE": 8987785448607620, "TOTAL": 3563630029918084}
}

# ðŸ”¹ Ignore formula-driven columns
FORMULA_COLUMNS = {"PO_BU", "STATUS", "CREATED", "UNIQUE_ID"}


@app.route('/')
def index():
    return render_template('form.html')


@app.route('/submit', methods=['POST'])
def submit():
    form_data = request.form
    row_cells = []

    # ðŸ”¹ Standard columns
    for field, col_id in COLUMN_IDS.items():
        if field.upper() in FORMULA_COLUMNS or field =="TOTAL_AMOUNT":
            continue

        value = form_data.get(field.lower())
        if value:
            row_cells.append({'column_id': col_id, 'value': value})

    # âœ… Add TOTAL AMOUNT column
    total_amount = form_data.get("total_amount")
    if total_amount:
        row_cells.append({"column_id": COLUMN_IDS["TOTAL_AMOUNT"], "value": total_amount})

    for i in range(1, 21):
        item_info = ITEM_COLUMNS.get(i)
        if not item_info:
            continue
        for field_name, col_id in item_info.items():
            form_field = f'item{i}_{field_name.lower()}'  # âœ… FIX naming
            value = form_data.get(form_field)
            if value:
                row_cells.append({'column_id': col_id, 'value': value})

    # ðŸ”¹ Default STATUS to "NEW" for each new row
    row_cells.append({'column_id': 8367071570382724, 'value': "NEW"})

    # ðŸ”¹ Create and send row
    new_row = smartsheet.models.Row()
    new_row.to_bottom = True
    new_row.cells = row_cells

    try:
        response = smartsheet_client.Sheets.add_rows(SHEET_ID, [new_row])
        flash("âœ… Success! Your order request has been submitted.")
        return redirect(url_for('index'))  # reload the form page
    except Exception as e:
        flash(f"There was an error submitting the form: {e}")
        return redirect(url_for('index'))


if __name__ == '__main__':
    app.run(debug=True)
